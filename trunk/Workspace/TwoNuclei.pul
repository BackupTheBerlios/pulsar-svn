# TwoNuclei.pul
# PULSAR Project:
#
# version=1.0
# Author: C. Fernandez
#
#------------------------------------------------------------------------------
# License:
#
# Copyright (C) 2006-2007 Jean-Paul Amoureux, Christian Fernandez
# JPA - Unite de Catalyse et Chimie du Solide, Lille, France.
# CF  - Laboratoire Catalyse et Spectrochimie, Caen, France.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License (GPL)
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# To read the license please visit http://www.gnu.org/copyleft/gpl.html
#------------------------------------------------------------------------------
# Purpose:
#   A sum of several spectra
#------------------------------------------------------------------------------

# start a new simulation
#-----------------------
sim1=Simulation(verbose=true)

# Set observation channel
#------------------------
sim1.set_channel("23Na")

# Nucleus definition 
#-------------------- 
Na1=Nucleus("23Na")   
Na1.set_quadrupole(cq="1.5 mhz", eta=0.3)    
Na1.set_chemicalshift(iso="2 ppm") 
Na1.set_lb("10 Hz") 
Na1.set_concentration(.5)          
sim1.add_nucleus(Na1)        

Na2=Nucleus("23Na")   
Na2.set_quadrupole(cq="0.5 mhz", eta=0.1)    
Na2.set_chemicalshift(iso="-10 ppm") 
Na2.set_lb("300 Hz") 
Na2.set_concentration(1)       
sim1.add_nucleus(Na2) 

# simulation setting
#-------------------            
sim1.set_spinningspeed("2.5 kHz") 
sim1.set_sw("10 kHz")             

# Pulse sequence
#---------------
sim1.set_idealpulse()

# Run simulations
#----------------
n=sim1.get_numberofnuclei("23Na")
for index in range (n):
    sim1.reset_nucleus()
    sim1.select_nucleus(index)
    sim1.set_nsb(AUTO) 
    sim1.execute_pulsar()  
    sim1.store_spectrum()   

sim1.sum_spectra()              # Sum spectra 
sim1.write_spectra()            # write spectra

