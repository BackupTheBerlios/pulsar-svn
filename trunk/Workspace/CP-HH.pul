# CP-HH.pul
# PULSAR Project:
#
# version=1.0
# Author: C. Fernandez
#
#------------------------------------------------------------------------------
# License:
#
# Copyright (C) 2006-2007 Jean-Paul Amoureux, Christian Fernandez
# JPA - Unite de Catalyse et Chimie du Solide, Lille, France.
# CF  - Laboratoire Catalyse et Spectrochimie, Caen, France.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License (GPL)
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# To read the license please visit http://www.gnu.org/copyleft/gpl.html
#------------------------------------------------------------------------------
# Purpose:
#   Cross polarization sequence between a pair of nuclei
#------------------------------------------------------------------------------

# start a new simulation
#-----------------------
sim1=Simulation(verbose=False,debug=False)

# Set observation channel
#------------------------
sim1.set_channel("13C","1H")      #define both channels

# Nucleus definition 
#-------------------- 
#nucleus with index 0
C=Nucleus("13C")   
C.set_lb("100 Hz")          
sim1.add_nucleus(C)        

# and the proton (with all default parameters)
#---------------------------------------------
H=Nucleus("1H")
sim1.add_nucleus(H)

#select observed
#---------------
sim1.select_observed(C)

#select coupled
#---------------
sim1.select_coupled(H)
sim1.set_dipole(1, dip="5000 Hz")

# simulation setting
#-------------------            
sim1.set_spinningspeed(STATIC) 
sim1.set_sw("10 kHz")             
sim1.set_detect(CENTRAL)
sim1.set_npts("1 K")
sim1.set_accuracy(3)

# Pulse sequence
#---------------
sim1.reset_spectra()                #reset spectra to zero

p15=250*usec
for plS in arange(50,150,.5):
    sim1.clearspectrum(True)
    for stp in [0,180]:
        sim1.reset_pulse()
        # spin temperature inversion phase: stp
        sim1.set_pulse(2.5,powerI=100*kHz,phaseI=stp)                   #90° Y pulse in channel I (plus 'stp' a phase for spin temperature inversion)
        sim1.set_pulse(p15,powerS=plS*kHz,phaseS=90,powerI=100*kHz,phaseI=90)    #simultaneous X pulses (Contact)
        sim1.set_rcph(stp) #the receiver has to follow the phase 'stp'
    
        # Run simulations
        #----------------
        sim1.execute_pulsar()  
        sim1.clearspectrum(False)       #keep the spectra in memory
    sim1.store_spectrum(data=plS,label="rf on channel S (kHz)") 
  
#Write spectra
sim1.write_spectra()